(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{562:function(e,n,t){"use strict";t.r(n);var s=t(8),i=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("初学 three.js，看见 css3d_panorama 例子感觉挺好，想要放到我的 vue 项目中。虽然例子移植完成，真心没学会。先记录下吧。")]),e._v(" "),t("h3",{attrs:{id:"引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引入"}},[e._v("#")]),e._v(" 引入")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install three\n")])])]),t("h3",{attrs:{id:"vue-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-文件"}},[e._v("#")]),e._v(" Vue 文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<template>\n  <el-container>\n    <el-main>\n      <div id=\"container\" class=\"container\"></div>\n    </el-main>\n  </el-container>\n</template>\n<script>\n  import { THREE, CSS3DObject, CSS3DRenderer } from '@/utils/3d/css3D'\n  export default {\n    name: 'Css3DDemo',\n    data() {\n      return {\n        renderer: '',\n        scene: '',\n        camera: '',\n        container: '',\n        target: '',\n        lon: 90,\n        lat: 0,\n        phi: 0,\n        theta: 0,\n        sides: [\n          {\n            url: require('@/assets/demo_images/posx.jpg'),\n            position: [-256, 0, 0],\n            rotation: [0, Math.PI / 2, 0],\n          },\n          {\n            url: require('@/assets/demo_images/negx.jpg'),\n            position: [256, 0, 0],\n            rotation: [0, -Math.PI / 2, 0],\n          },\n          {\n            url: require('@/assets/demo_images/posy.jpg'),\n            position: [0, 256, 0],\n            rotation: [Math.PI / 2, 0, Math.PI],\n          },\n          {\n            url: require('@/assets/demo_images/negy.jpg'),\n            position: [0, -256, 0],\n            rotation: [-Math.PI / 2, 0, Math.PI],\n          },\n          {\n            url: require('@/assets/demo_images/posz.jpg'),\n            position: [0, 0, 256],\n            rotation: [0, Math.PI, 0],\n          },\n          {\n            url: require('@/assets/demo_images/negz.jpg'),\n            position: [0, 0, -256],\n            rotation: [0, 0, 0],\n          },\n        ],\n      }\n    },\n    computed: {\n      width() {\n        return this.container.clientWidth\n      },\n      height() {\n        return this.container.clientHeight\n      },\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.createTarget()\n        this.init()\n        this.animate()\n      })\n    },\n    methods: {\n      init() {\n        this.container = document.getElementById('container')\n        // 1、创建场景和摄像机\n        this.createScene()\n        this.createCamera()\n        //2、创建ThreeJs 渲染器\n        this.createRenderer()\n\t\t//创建3D对象\n        this.createCSS3DObject()\n\t\t//注册监听事件\n        document.addEventListener('mousedown', this.onDocumentMouseDown, false)\n        document.addEventListener('wheel', this.onDocumentMouseWheel, false)\n\n        document.addEventListener(\n          'touchstart',\n          this.onDocumentTouchStart,\n          false\n        )\n        document.addEventListener('touchmove', this.onDocumentTouchMove, false)\n      },\n      beforeMount() {\n        window.addEventListener('resize', this.onWindowResize())\n      },\n      beforeDestroy() {\n        window.removeEventListener('resize', this.onWindowResize())\n      },\n      createLight() {\n        //点光源\n        let point = new THREE.PointLight(0xffffff)\n        point.position.set(400, 200, 300) //点光源位置\n        this.scene.add(point) //点光源添加到场景中\n        //环境光\n        let ambient = new THREE.AmbientLight(0x444444)\n        this.scene.add(ambient)\n      },\n      createScene() {\n        this.scene = new THREE.Scene()\n      },\n      createCamera() {\n        let k = this.width / this.height //窗口宽高比\n        this.camera = new THREE.PerspectiveCamera(75, k, 1, 1000)\n      },\n      createRenderer() {\n        this.renderer = new CSS3DRenderer()\n        this.renderer.setSize(this.width, this.height)\n        this.container.appendChild(this.renderer.domElement)\n      },\n      createCSS3DObject() {\n        for (var i = 0; i < this.sides.length; i++) {\n          var side = this.sides[i]\n\n          var element = document.createElement('img')\n          element.width = 514 // 2 pixels extra to close the gap.\n          element.src = side.url\n\n          var object = new CSS3DObject(element)\n          object.position.fromArray(side.position)\n          object.rotation.fromArray(side.rotation)\n          this.scene.add(object)\n        }\n      },\n      createTarget() {\n        this.target = new THREE.Vector3()\n      },\n      animate() {\n        requestAnimationFrame(this.animate)\n\n        this.lon += 0.1\n        this.lat = Math.max(-85, Math.min(85, this.lat))\n        this.phi = THREE.Math.degToRad(90 - this.lat)\n        this.theta = THREE.Math.degToRad(this.lon)\n\n        this.target.x = Math.sin(this.phi) * Math.cos(this.theta)\n        this.target.y = Math.cos(this.phi)\n        this.target.z = Math.sin(this.phi) * Math.sin(this.theta)\n\n        this.camera.lookAt(this.target)\n\n        this.renderer.render(this.scene, this.camera)\n      },\n      onWindowResize() {\n        this.camera.aspect = this.width / this.height\n        this.camera.updateProjectionMatrix()\n\n        this.renderer.setSize(this.width, this.height)\n      },\n      onDocumentMouseDown(event) {\n        event.preventDefault()\n\n        document.addEventListener('mousemove', this.onDocumentMouseMove, false)\n        document.addEventListener('mouseup', this.onDocumentMouseUp, false)\n      },\n      onDocumentMouseMove(event) {\n        let movementX =\n          event.movementX || event.mozMovementX || event.webkitMovementX || 0\n        let movementY =\n          event.movementY || event.mozMovementY || event.webkitMovementY || 0\n\n        this.lon -= movementX * 0.1\n        this.lat += movementY * 0.1\n      },\n      onDocumentMouseUp() {\n        document.removeEventListener('mousemove', this.onDocumentMouseMove)\n        document.removeEventListener('mouseup', this.onDocumentMouseUp)\n      },\n      onDocumentMouseWheel(event) {\n        let fov = this.camera.fov + event.deltaY * 0.05\n\n        this.camera.fov = THREE.Math.clamp(fov, 10, 75)\n\n        this.camera.updateProjectionMatrix()\n      },\n      onDocumentTouchStart(event) {\n        event.preventDefault()\n\n        let touch = event.touches[0]\n\n        this.touchX = touch.screenX\n        this.touchY = touch.screenY\n      },\n      onDocumentTouchMove(event) {\n        event.preventDefault()\n\n        let touch = event.touches[0]\n\n        this.lon -= (touch.screenX - this.touchX) * 0.1\n        this.lat += (touch.screenY - this.touchY) * 0.1\n\n        this.touchX = touch.screenX\n        this.touchY = touch.screenY\n      },\n    },\n  }\n<\/script>\n<style scoped>\n  .container {\n    height: 100%;\n  }\n</style>\n\n")])])]),t("h3",{attrs:{id:"css3d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css3d"}},[e._v("#")]),e._v(" css3D")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import * as THREE from 'three'\n\nlet matrix = new THREE.Matrix4()\nlet isIE = /Trident/i.test(navigator.userAgent)\nlet cache = {\n  camera: { fov: 0, style: '' },\n  objects: {},\n}\n\nclass CSS3DObject extends THREE.Object3D {\n  constructor(element) {\n    super()\n    this.element = element\n    this.element.style.position = 'absolute'\n    this.addEventListener('removed', function () {\n      if (this.element.parentNode !== null) {\n        this.element.parentNode.removeChild(this.element)\n      }\n    })\n  }\n}\nclass CSS3DSprite extends CSS3DObject {\n  constructor(element) {\n    super(element)\n  }\n}\n\nclass CSS3DRenderer {\n  constructor() {\n    console.log('MyThree.CSS3DRenderer', THREE.REVISION)\n\n    this.domElement = document.createElement('div')\n    this.domElement.style.overflow = 'hidden'\n    this.cameraElement = document.createElement('div')\n\n    this.cameraElement.style.WebkitTransformStyle = 'preserve-3d'\n    this.cameraElement.style.transformStyle = 'preserve-3d'\n    this.domElement.appendChild(this.cameraElement)\n  }\n  getSize() {\n    return {\n      width: this._width,\n      height: this._height,\n    }\n  }\n\n  setSize(width, height) {\n    this._width = width\n    this._height = height\n    this._widthHalf = this._width / 2\n    this._heightHalf = this._height / 2\n\n    this.domElement.style.width = width + 'px'\n    this.domElement.style.height = height + 'px'\n\n    this.cameraElement.style.width = width + 'px'\n    this.cameraElement.style.height = height + 'px'\n  }\n\n  render(scene, camera) {\n    let fov = camera.projectionMatrix.elements[5] * this._heightHalf\n\n    if (cache.camera.fov !== fov) {\n      if (camera.isPerspectiveCamera) {\n        this.domElement.style.WebkitPerspective = fov + 'px'\n        this.domElement.style.perspective = fov + 'px'\n      }\n\n      cache.camera.fov = fov\n    }\n\n    scene.updateMatrixWorld()\n\n    if (camera.parent === null) camera.updateMatrixWorld()\n\n    let cameraCSSMatrix = camera.isOrthographicCamera\n      ? 'scale(' + fov + ')' + getCameraCSSMatrix(camera.matrixWorldInverse)\n      : 'translateZ(' +\n        fov +\n        'px)' +\n        getCameraCSSMatrix(camera.matrixWorldInverse)\n\n    let style =\n      cameraCSSMatrix +\n      'translate(' +\n      this._widthHalf +\n      'px,' +\n      this._heightHalf +\n      'px)'\n\n    if (cache.camera.style !== style && !isIE) {\n      this.cameraElement.style.WebkitTransform = style\n      this.cameraElement.style.transform = style\n\n      cache.camera.style = style\n    }\n\n    this.renderObject(scene, camera, cameraCSSMatrix)\n\n    if (isIE) {\n      // IE10 and 11 does not support 'preserve-3d'.\n      // Thus, z-order in 3D will not work.\n      // We have to calc z-order manually and set CSS z-index for IE.\n      // FYI: z-index can't handle object intersection\n      zOrder(scene)\n    }\n  }\n\n  renderObject(object, camera, cameraCSSMatrix) {\n    if (object instanceof CSS3DObject) {\n      let style\n\n      if (object instanceof CSS3DSprite) {\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n        matrix.copy(camera.matrixWorldInverse)\n        matrix.transpose()\n        matrix.copyPosition(object.matrixWorld)\n        matrix.scale(object.scale)\n\n        matrix.elements[3] = 0\n        matrix.elements[7] = 0\n        matrix.elements[11] = 0\n        matrix.elements[15] = 1\n\n        style = getObjectCSSMatrix(matrix, cameraCSSMatrix)\n      } else {\n        style = getObjectCSSMatrix(object.matrixWorld, cameraCSSMatrix)\n      }\n\n      let element = object.element\n      let cachedStyle =\n        cache.objects[object.id] && cache.objects[object.id].style\n\n      if (cachedStyle === undefined || cachedStyle !== style) {\n        element.style.WebkitTransform = style\n        element.style.transform = style\n\n        cache.objects[object.id] = { style: style }\n\n        if (isIE) {\n          cache.objects[object.id].distanceToCameraSquared =\n            getDistanceToSquared(camera, object)\n        }\n      }\n\n      if (element.parentNode !== this.cameraElement) {\n        this.cameraElement.appendChild(element)\n      }\n    }\n\n    for (let i = 0, l = object.children.length; i < l; i++) {\n      this.renderObject(object.children[i], camera, cameraCSSMatrix)\n    }\n  }\n}\n\nfunction zOrder(scene) {\n  let order = Object.keys(cache.objects).sort(function (a, b) {\n    return (\n      cache.objects[a].distanceToCameraSquared -\n      cache.objects[b].distanceToCameraSquared\n    )\n  })\n  let zMax = order.length\n\n  scene.traverse(function (object) {\n    let index = order.indexOf(object.id + '')\n\n    if (index !== -1) {\n      object.element.style.zIndex = zMax - index\n    }\n  })\n}\n\nfunction epsilon(value) {\n  return Math.abs(value) < 1e-10 ? 0 : value\n}\nfunction getCameraCSSMatrix(matrix) {\n  let elements = matrix.elements\n\n  return (\n    'matrix3d(' +\n    epsilon(elements[0]) +\n    ',' +\n    epsilon(-elements[1]) +\n    ',' +\n    epsilon(elements[2]) +\n    ',' +\n    epsilon(elements[3]) +\n    ',' +\n    epsilon(elements[4]) +\n    ',' +\n    epsilon(-elements[5]) +\n    ',' +\n    epsilon(elements[6]) +\n    ',' +\n    epsilon(elements[7]) +\n    ',' +\n    epsilon(elements[8]) +\n    ',' +\n    epsilon(-elements[9]) +\n    ',' +\n    epsilon(elements[10]) +\n    ',' +\n    epsilon(elements[11]) +\n    ',' +\n    epsilon(elements[12]) +\n    ',' +\n    epsilon(-elements[13]) +\n    ',' +\n    epsilon(elements[14]) +\n    ',' +\n    epsilon(elements[15]) +\n    ')'\n  )\n}\nfunction getObjectCSSMatrix(matrix, cameraCSSMatrix) {\n  let elements = matrix.elements\n  let matrix3d =\n    'matrix3d(' +\n    epsilon(elements[0]) +\n    ',' +\n    epsilon(elements[1]) +\n    ',' +\n    epsilon(elements[2]) +\n    ',' +\n    epsilon(elements[3]) +\n    ',' +\n    epsilon(-elements[4]) +\n    ',' +\n    epsilon(-elements[5]) +\n    ',' +\n    epsilon(-elements[6]) +\n    ',' +\n    epsilon(-elements[7]) +\n    ',' +\n    epsilon(elements[8]) +\n    ',' +\n    epsilon(elements[9]) +\n    ',' +\n    epsilon(elements[10]) +\n    ',' +\n    epsilon(elements[11]) +\n    ',' +\n    epsilon(elements[12]) +\n    ',' +\n    epsilon(elements[13]) +\n    ',' +\n    epsilon(elements[14]) +\n    ',' +\n    epsilon(elements[15]) +\n    ')'\n\n  if (isIE) {\n    return (\n      'translate(-50%,-50%)' +\n      'translate(' +\n      this._widthHalf +\n      'px,' +\n      this._heightHalf +\n      'px)' +\n      cameraCSSMatrix +\n      matrix3d\n    )\n  }\n\n  return 'translate(-50%,-50%)' + matrix3d\n}\n\nlet getDistanceToSquared = (function () {\n  let a = new THREE.Vector3()\n  let b = new THREE.Vector3()\n\n  return function (object1, object2) {\n    a.setFromMatrixPosition(object1.matrixWorld)\n    b.setFromMatrixPosition(object2.matrixWorld)\n\n    return a.distanceToSquared(b)\n  }\n})()\n\nexport { THREE, CSS3DObject, CSS3DRenderer }\n\n")])])]),t("h3",{attrs:{id:"效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[e._v("#")]),e._v(" 效果")]),e._v(" "),t("img",{attrs:{src:e.$withBase("/images/vue/css3d.png"),alt:"mixureSecure"}}),e._v(" "),t("copyright")],1)}),[],!1,null,null,null);n.default=i.exports}}]);